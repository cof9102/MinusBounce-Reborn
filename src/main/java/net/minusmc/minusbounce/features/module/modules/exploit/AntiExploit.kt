/*
 * MinusBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/MinusMC/MinusBounce
 */
package net.minusmc.minusbounce.features.module.modules.exploit

import net.minusmc.minusbounce.event.EventTarget
import net.minusmc.minusbounce.event.ReceivedPacketEvent
import net.minusmc.minusbounce.event.UpdateEvent
import net.minusmc.minusbounce.features.module.Module
import net.minusmc.minusbounce.features.module.ModuleCategory
import net.minusmc.minusbounce.features.module.ModuleInfo
import net.minusmc.minusbounce.value.BoolValue
import net.minusmc.minusbounce.value.IntegerValue
import net.minecraft.network.play.server.*

import kotlin.math.abs

@ModuleInfo(name = "AntiExploit", spacedName = "Anti Exploit", description = "Prevent servers from doing certain harmful things.", category = ModuleCategory.MISC)
object AntiExploit : Module() {
    private val guardianValue = BoolValue("LessGuardian", true)
    private val maxArrowSpawn = IntegerValue("MaxArrowPerSecond", 100, 50, 1000)

    private var tick = 0
    private var arrowMax = 0
    private var guardianEffect = false

    @EventTarget
    fun onReceivedPacket(event: ReceivedPacketEvent) {
        mc.thePlayer ?: return
        mc.theWorld ?: return

        val packet = event.packet

        if (packet is S0FPacketSpawnMob && mc.theWorld.loadedEntityList.size > 500)
            event.isCancelled = true

        if (packet is S08PacketPlayerPosLook) {
            if (abs(packet.x) > 3E7 || abs(packet.y) > 3E7 || abs(packet.z) > 3E7)
                event.isCancelled = true
        }

        if (packet is S2APacketParticles && packet.particleCount > 1024)
            event.isCancelled = true

        if (packet is S27PacketExplosion) {
            if (abs(packet.func_149149_c()) > 100.0 || abs(packet.func_149144_d()) > 100.0 || abs(packet.func_149147_e()) > 100.0)
                event.isCancelled = true
        }

        if (packet is S2BPacketChangeGameState) {
            if (packet.gameState == 5)
                event.isCancelled = true

            if (guardianValue.get() && packet.gameState == 10) {
                if (!guardianEffect)
                    guardianEffect = true
                else
                    event.isCancelled = true
            }
        }

        if (packet is S0EPacketSpawnObject && packet.type == 60 && arrowMax++ > maxArrowSpawn.get())
            event.isCancelled = true
    }

    @EventTarget
    fun onUpdate(event: UpdateEvent) {
        tick++

        if (tick >= 20) {
            tick = 0
            arrowMax = 0
            guardianEffect = false
        }
    }

}