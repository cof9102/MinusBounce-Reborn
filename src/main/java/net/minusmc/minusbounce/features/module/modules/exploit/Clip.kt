/*
 * MinusBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/MinusMC/MinusBounce
 */
package net.minusmc.minusbounce.features.module.modules.exploit

import net.minecraft.network.play.client.C03PacketPlayer.C04PacketPlayerPosition
import net.minusmc.minusbounce.features.module.Module
import net.minusmc.minusbounce.features.module.ModuleCategory
import net.minusmc.minusbounce.features.module.ModuleInfo
import net.minusmc.minusbounce.utils.misc.MathUtils
import net.minusmc.minusbounce.value.FloatValue
import net.minusmc.minusbounce.value.ListValue
import kotlin.math.cos
import kotlin.math.sin

@ModuleInfo(name = "Clip", description = "Allows you to clip through blocks.", category = ModuleCategory.EXPLOIT, onlyEnable = true)
class Clip : Module() {

    private val modeValue = ListValue("Mode", arrayOf("Teleport", "Flag"), "Teleport")
    private val horizontalValue = FloatValue("Horizontal", 0f, -10f, 10f, "m")
    private val verticalValue = FloatValue("Vertical", 5f, -10f, 10f, "m")

    override fun onEnable() {
        mc.thePlayer ?: return

        val yaw = MathUtils.toRadians(mc.thePlayer.rotationYaw)
        val x = -sin(yaw) * horizontalValue.get()
        val z = cos(yaw) * horizontalValue.get()

        when (modeValue.get().lowercase()) {
            "teleport" -> mc.thePlayer.setPosition(mc.thePlayer.posX + x, mc.thePlayer.posY + verticalValue.get(), mc.thePlayer.posZ + z)

            "flag" -> {
                mc.netHandler.addToSendQueue(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true))
                mc.netHandler.addToSendQueue(C04PacketPlayerPosition(0.5, 0.0, 0.5, true))
                mc.netHandler.addToSendQueue(C04PacketPlayerPosition(mc.thePlayer.posX, mc.thePlayer.posY, mc.thePlayer.posZ, true))
                mc.netHandler.addToSendQueue(C04PacketPlayerPosition(mc.thePlayer.posX + x, mc.thePlayer.posY + verticalValue.get(), mc.thePlayer.posZ + z, true))
                mc.netHandler.addToSendQueue(C04PacketPlayerPosition(0.5, 0.0, 0.5, true))
                mc.netHandler.addToSendQueue(C04PacketPlayerPosition(mc.thePlayer.posX + 0.5, mc.thePlayer.posY, mc.thePlayer.posZ + 0.5, true))
                mc.thePlayer.setPosition(mc.thePlayer.posX + -sin(yaw) * 0.04, mc.thePlayer.posY, mc.thePlayer.posZ + cos(yaw) * 0.04)
            }
        }
    }

}
