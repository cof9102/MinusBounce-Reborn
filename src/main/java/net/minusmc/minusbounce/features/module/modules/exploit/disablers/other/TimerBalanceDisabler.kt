/*
 * LiquidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CCBlueX/LiquidBounce/
 */
package net.minusmc.minusbounce.features.module.modules.exploit.disablers.other

import net.minecraft.client.gui.ScaledResolution
import net.minecraft.network.Packet
import net.minecraft.network.play.client.C03PacketPlayer
import net.minecraft.network.play.client.C0FPacketConfirmTransaction
import net.minecraft.network.play.INetHandlerPlayServer
import net.minusmc.minusbounce.event.UpdateEvent
import net.minusmc.minusbounce.event.SentPacketEvent
import net.minusmc.minusbounce.event.Render2DEvent
import net.minusmc.minusbounce.event.TickEvent
import net.minusmc.minusbounce.features.module.modules.exploit.disablers.DisablerMode
import net.minusmc.minusbounce.utils.*
import net.minusmc.minusbounce.value.BoolValue

class TimerBalance: DisablerMode("TimerBalance") {

    private val packets = mutableListOf<C0FPacketConfirmTransaction>()
    private var balance = 0L
    private var last = 0L
    private var shouldIgnoreC0F = false

    override fun onDisable() {
        balance = 0
        last = 0
        shouldIgnoreC0F = false

        if (mc.thePlayer != null && mc.thePlayer.ticksExisted > 50) {
            packets.forEach { PacketUtils.sendPacketNoEvent(it) }
            packets.clear()
        }
    }

    override fun onSentPacket(event: SentPacketEvent) {
        val packet = event.packet

        if (packet is C0FPacketConfirmTransaction) {
            if (shouldIgnoreC0F) {
                event.isCancelled = true
                packets.add(packet)
            } else if (!packets.isEmpty()) {
                event.isCancelled = true
                packets.add(packet)

                PacketUtils.sendPacketNoEvent(packets.removeFirst())
            }
        }

        if (packet is C03PacketPlayer) {
            if (last == 0L) {
                last = System.currentTimeMillis()
                return
            }

            if (!packet.isMoving && !packet.rotating)
                event.isCancelled = true

            shouldIgnoreC0F = event.isCancelled

            if (shouldIgnoreC0F) {
                balance -= 50
                return
            }

            balance += 50
            balance -= System.currentTimeMillis() - last

            last = System.currentTimeMillis()
        }
    }

    override fun onUpdate() {
        if (mc.thePlayer.ticksExisted % 20 == 0)
            ClientUtils.displayChatMessage("Balance: $balance")
    }

    override fun onTick() {
        if (balance >= 49)
            mc.timer.timerSpeed = 1.0F
    }

}