package net.minusmc.minusbounce.features.module.modules.exploit.phases.other

import net.minusmc.minusbounce.event.MoveEvent
import net.minusmc.minusbounce.features.module.modules.exploit.phases.PhaseMode
import net.minusmc.minusbounce.utils.player.MovementUtils
import kotlin.math.cos
import kotlin.math.sin


class MineplexPhase : PhaseMode("Mineplex") {

	private var ticks = 0
	private var clip = false

	override fun onMove(event: MoveEvent) {
		if (mc.thePlayer.isCollidedHorizontally)
            clip = true

        if (!clip)
            return

        ticks++

        event.x = 0.0
        event.z = 0.0

        if (ticks >= 3) {
            ticks = 0
            clip = false
        } else if (ticks >= 1) {
            val offset = if (ticks >= 2) 1.6 else 0.06
            val direction = MovementUtils.directionToRadian

            val x = sin(direction) * offset
            val z = cos(direction) * offset

            mc.thePlayer.setPosition(mc.thePlayer.posX - x, mc.thePlayer.posY, mc.thePlayer.posZ + z)
        }
	} 
}
